---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterprofiles.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterProfile
    listKind: ClusterProfileList
    plural: clusterprofiles
    singular: clusterprofile
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterProfile is the Schema for the clusterprofiles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterProfileSpec defines the desired state of ClusterProfile
            properties:
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                type: string
              helmCharts:
                description: Helm charts
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    chartVersion:
                      description: ChartVersion is the chart version
                      minLength: 1
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: RepositoryName is the name helm chart repository
                      minLength: 1
                      type: string
                    repositoryURL:
                      description: RepositoryURL is the URL helm chart repository
                      minLength: 1
                      type: string
                    secretRef:
                      description: SecretRef contains confidential data that needs
                        to be used as values for templates
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    values:
                      description: 'Values holds the values for this Helm release.
                        Go templating with the values from the referenced CAPI Cluster.
                        Currently following can be referenced: - Cluster => CAPI Cluster
                        for instance - KubeadmControlPlane => the CAPI Cluster controlPlaneRef
                        - InfrastructureProvider => the CAPI cluster infrastructure
                        provider - SecretRef => store any confindetial information
                        in a Secret, set SecretRef then reference it'
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseName
                  - releaseNamespace
                  - repositoryName
                  - repositoryURL
                  type: object
                type: array
              policyRefs:
                description: PolicyRefs references all the ConfigMaps/Secrets containing
                  kubernetes resources that need to be deployed in the matching CAPI
                  clusters.
                items:
                  description: PolicyRef specifies a resource containing one or more
                    policy to deploy in matching Clusters.
                  properties:
                    kind:
                      description: 'Kind of the resource. Supported kinds are: Secrets
                        and ConfigMaps.'
                      enum:
                      - Secret
                      - ConfigMap
                      type: string
                    name:
                      description: Name of the rreferenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the referenced resource. Namespace
                        can be left empty. In such a case, namespace will be implicit
                        set to cluster's namespace.
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: StopMatchingBehavior indicates what behavior should be
                  when a Cluster stop matching the ClusterProfile. By default all
                  deployed Helm charts and Kubernetes resources will be withdrawn
                  from Cluster. Setting StopMatchingBehavior to LeavePolicies will
                  instead leave ClusterProfile deployed policies in the Cluster.
                type: string
              syncMode:
                default: Continuous
                description: SyncMode specifies how features are synced in a matching
                  workload cluster. - OneTime means, first time a workload cluster
                  matches the ClusterProfile, features will be deployed in such cluster.
                  Any subsequent feature configuration change won't be applied into
                  the matching workload clusters; - Continuous means first time a
                  workload cluster matches the ClusterProfile, features will be deployed
                  in such a cluster. Any subsequent feature configuration change will
                  be applied into the matching workload clusters. - DryRun means no
                  change will be propagated to any matching cluster. A report instead
                  will be generated summarizing what would happen in any matching
                  cluster because of the changes made to ClusterProfile while in DryRun
                  mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
            required:
            - clusterSelector
            type: object
          status:
            description: ClusterProfileStatus defines the observed state of ClusterProfile
            properties:
              matchingClusters:
                description: MatchingClusterRefs reference all the cluster-api Cluster
                  currently matching ClusterProfile ClusterSelector
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
