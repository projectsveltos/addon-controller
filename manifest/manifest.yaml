apiVersion: v1
kind: Namespace
metadata:
  name: projectsveltos
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterconfigurations.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterConfiguration
    listKind: ClusterConfigurationList
    plural: clusterconfigurations
    singular: clusterconfiguration
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterConfiguration is the Schema for the clusterconfigurations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: ClusterConfigurationStatus defines the observed state of
              ClusterConfiguration
            properties:
              clusterProfileResources:
                description: |-
                  ClusterProfileResources is the list of resources currently deployed in a Cluster due
                  to ClusterProfiles
                items:
                  description: |-
                    ClusterProfileResource keeps info on all of the resources deployed in this Cluster
                    due to a given ClusterProfile
                  properties:
                    Features:
                      description: |-
                        Features contains the list of policies deployed in the Cluster because
                        of a given feature
                      items:
                        properties:
                          charts:
                            description: Charts is a list of helm charts deployed
                              in the Cluster.
                            items:
                              properties:
                                appVersion:
                                  description: AppVersion is the version of the app
                                    deployed in the Cluster.
                                  type: string
                                chartVersion:
                                  description: ChartVersion is the version of the
                                    helm chart deployed in the Cluster.
                                  type: string
                                icon:
                                  description: The URL to an icon file.
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                namespace:
                                  description: Namespace where chart is deployed in
                                    the Cluster.
                                  type: string
                                releaseName:
                                  description: ReleaseName name of the release deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL URL of the repo containing the helm chart deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - chartVersion
                              - lastAppliedTime
                              - releaseName
                              - repoURL
                              type: object
                            type: array
                          featureID:
                            description: FeatureID is an indentifier of the feature
                              whose status is reported
                            enum:
                            - Resources
                            - Helm
                            - Kustomize
                            type: string
                          resources:
                            description: Resources is a list of resources deployed
                              in the Cluster.
                            items:
                              properties:
                                group:
                                  description: Group of the resource deployed in the
                                    Cluster.
                                  type: string
                                ignoreForConfigurationDrift:
                                  default: false
                                  description: |-
                                    IgnoreForConfigurationDrift indicates to not track resource
                                    for configuration drift detection.
                                    This field has a meaning only when mode is ContinuousWithDriftDetection
                                  type: boolean
                                kind:
                                  description: Kind of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                name:
                                  description: Name of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the resource deployed in the Cluster.
                                    Empty for resources scoped at cluster level.
                                  type: string
                                version:
                                  description: Version of the resource deployed in
                                    the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - group
                              - kind
                              - name
                              - version
                              type: object
                            type: array
                        required:
                        - featureID
                        type: object
                      type: array
                    clusterProfileName:
                      description: ProfileName is the name of the ClusterProfile matching
                        the Cluster.
                      type: string
                  required:
                  - clusterProfileName
                  type: object
                type: array
              profileResources:
                description: |-
                  ProfileResources is the list of resources currently deployed in a Cluster due
                  to Profiles
                items:
                  description: |-
                    ProfileResource keeps info on all of the resources deployed in this Cluster
                    due to a given Profile
                  properties:
                    Features:
                      description: |-
                        Features contains the list of policies deployed in the Cluster because
                        of a given feature
                      items:
                        properties:
                          charts:
                            description: Charts is a list of helm charts deployed
                              in the Cluster.
                            items:
                              properties:
                                appVersion:
                                  description: AppVersion is the version of the app
                                    deployed in the Cluster.
                                  type: string
                                chartVersion:
                                  description: ChartVersion is the version of the
                                    helm chart deployed in the Cluster.
                                  type: string
                                icon:
                                  description: The URL to an icon file.
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                namespace:
                                  description: Namespace where chart is deployed in
                                    the Cluster.
                                  type: string
                                releaseName:
                                  description: ReleaseName name of the release deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL URL of the repo containing the helm chart deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - chartVersion
                              - lastAppliedTime
                              - releaseName
                              - repoURL
                              type: object
                            type: array
                          featureID:
                            description: FeatureID is an indentifier of the feature
                              whose status is reported
                            enum:
                            - Resources
                            - Helm
                            - Kustomize
                            type: string
                          resources:
                            description: Resources is a list of resources deployed
                              in the Cluster.
                            items:
                              properties:
                                group:
                                  description: Group of the resource deployed in the
                                    Cluster.
                                  type: string
                                ignoreForConfigurationDrift:
                                  default: false
                                  description: |-
                                    IgnoreForConfigurationDrift indicates to not track resource
                                    for configuration drift detection.
                                    This field has a meaning only when mode is ContinuousWithDriftDetection
                                  type: boolean
                                kind:
                                  description: Kind of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                name:
                                  description: Name of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the resource deployed in the Cluster.
                                    Empty for resources scoped at cluster level.
                                  type: string
                                version:
                                  description: Version of the resource deployed in
                                    the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - group
                              - kind
                              - name
                              - version
                              type: object
                            type: array
                        required:
                        - featureID
                        type: object
                      type: array
                    profileName:
                      description: ProfileName is the name of the Profile matching
                        the Cluster.
                      type: string
                  required:
                  - profileName
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterprofiles.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterProfile
    listKind: ClusterProfileList
    plural: clusterprofiles
    singular: clusterprofile
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterProfile is the Schema for the clusterprofiles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterRefs:
                description: ClusterRefs identifies clusters to associate to.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              continueOnConflict:
                default: false
                description: |-
                  By default (when ContinueOnConflict is unset or set to false), Sveltos stops deployment after
                  encountering the first conflict (e.g., another ClusterProfile already deployed the resource).
                  If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                  if conflicts are detected for previous resources.
                type: boolean
              continueOnError:
                default: false
                description: |-
                  By default (when ContinueOnError is unset or set to false), Sveltos stops deployment after
                  encountering the first error.
                  If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                  if errors are detected for previous resources.
                type: boolean
              dependsOn:
                description: |-
                  DependsOn specifies a list of other ClusterProfiles that this instance depends on.
                  In any managed cluster that matches this ClusterProfile, the add-ons and applications
                  defined in this instance will not be deployed until all add-ons and applications in the
                  ClusterProfiles listed as dependencies are deployed.
                items:
                  type: string
                type: array
              driftExclusions:
                description: |-
                  DriftExclusions is a list of configuration drift exclusions to be applied when syncMode is
                  set to ContinuousWithDriftDetection. Each exclusion specifies JSON6902 paths to ignore
                  when evaluating drift, optionally targeting specific resources and features.
                items:
                  properties:
                    paths:
                      description: Paths is a slice of JSON6902 paths to exclude from
                        configuration drift evaluation.
                      items:
                        type: string
                      type: array
                    target:
                      description: Target points to the resources that the paths refers
                        to.
                      properties:
                        annotationSelector:
                          description: |-
                            AnnotationSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource annotations.
                          type: string
                        group:
                          description: |-
                            Group is the API group to select resources from.
                            Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        kind:
                          description: |-
                            Kind of the API Group to select resources from.
                            Together with Group and Version it is capable of unambiguously
                            identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource labels.
                          type: string
                        name:
                          description: Name to match resources with.
                          type: string
                        namespace:
                          description: Namespace to select resources from.
                          type: string
                        version:
                          description: |-
                            Version of the API Group to select resources from.
                            Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                      type: object
                  required:
                  - paths
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              extraAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                  deployed in a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                  `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                  (Deprecated use Patches instead)
                type: object
              extraLabels:
                additionalProperties:
                  type: string
                description: |-
                  ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                  a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a label with a key present in
                  `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                  (Deprecated use Patches instead)
                type: object
              helmCharts:
                description: Helm charts is a list of helm charts that need to be
                  deployed
                items:
                  properties:
                    chartName:
                      description: |-
                        ChartName is the chart name
                        This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                        Must be defined otherwise.
                      type: string
                    chartVersion:
                      description: |-
                        ChartVersion is the chart version
                        This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                        It is ignored if RepositoryURL references a Flux Source.
                        Must be defined otherwise.
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    options:
                      description: Options allows to set flags which are used during
                        installation.
                      properties:
                        atomic:
                          default: false
                          description: |-
                            if set, the installation process deletes the installation/upgrades on failure.
                            The --wait flag will be set automatically if --atomic is used
                            Default to false
                          type: boolean
                        dependencyUpdate:
                          default: false
                          description: |-
                            update dependencies if they are missing before installing the chart
                            Default to false
                          type: boolean
                        description:
                          description: Description is the description of an helm operation
                          type: string
                        disableHooks:
                          default: false
                          description: |-
                            prevent hooks from running during install/upgrade/uninstall
                            Default to false
                          type: boolean
                        disableOpenAPIValidation:
                          default: false
                          description: |-
                            if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                            Default to false
                          type: boolean
                        enableClientCache:
                          default: false
                          description: EnableClientCache is a flag to enable Helm
                            client cache. If it is not specified, it will be set to
                            false.
                          type: boolean
                        installOptions:
                          description: HelmInstallOptions are options specific to
                            helm install
                          properties:
                            createNamespace:
                              default: true
                              description: Create the release namespace if not present.
                                Defaults to true
                              type: boolean
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install. If set to true, overrides
                                DisableHooks in HelmOptions. Use this one when you want to selective
                                disable hooks on install
                                Default to false
                              type: boolean
                            replace:
                              default: true
                              description: Replaces if set indicates to replace an
                                older release with this one
                              type: boolean
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels that would be added to release metadata.
                          type: object
                        skipCRDs:
                          default: false
                          description: |-
                            SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                            By default, CRDs are installed if not already present.
                          type: boolean
                        skipSchemaValidation:
                          default: false
                          description: SkipSchemaValidation determines if JSON schema
                            validation is disabled.
                          type: boolean
                        timeout:
                          description: time to wait for any individual Kubernetes
                            operation (like Jobs for hooks) (default 5m0s)
                          type: string
                        uninstallOptions:
                          description: HelmUninstallOptions are options specific to
                            helm uninstall
                          properties:
                            deletionPropagation:
                              description: DeletionPropagation
                              enum:
                              - orphan
                              - foreground
                              - background
                              type: string
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install. If set to true, overrides
                                DisableHooks in HelmOptions. Use this one when you want to selective
                                disable hooks on uninstall
                                Default to false
                              type: boolean
                            keepHistory:
                              description: |-
                                When uninstall a chart with this flag, Helm removes the resources associated with the chart,
                                but it keeps the release information. This allows to see details about the uninstalled release
                                using the helm history command.
                              type: boolean
                          type: object
                        upgradeOptions:
                          description: HelmUpgradeOptions are options specific to
                            helm upgrade
                          properties:
                            cleanupOnFail:
                              default: false
                              description: CleanupOnFail will, if true, cause the
                                upgrade to delete newly-created resources on a failed
                                update.
                              type: boolean
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install. If set to true, overrides
                                DisableHooks in HelmOptions. Use this one when you want to selective
                                disable hooks on upgrade
                                Default to false
                              type: boolean
                            force:
                              default: false
                              description: |-
                                Force will, if set to `true`, ignore certain warnings and perform the upgrade anyway.
                                This should be used with caution.
                              type: boolean
                            maxHistory:
                              default: 2
                              description: |-
                                MaxHistory limits the maximum number of revisions saved per release
                                Default to 2
                              type: integer
                            recreate:
                              default: false
                              description: Recreate will (if true) recreate pods after
                                a rollback.
                              type: boolean
                            resetThenReuseValues:
                              default: false
                              description: ResetThenReuseValues will reset the values
                                to the chart's built-ins then merge with user's last
                                supplied values.
                              type: boolean
                            resetValues:
                              default: false
                              description: ResetValues will reset the values to the
                                chart's built-ins rather than merging with existing.
                              type: boolean
                            reuseValues:
                              default: false
                              description: |-
                                ReuseValues copies values from the current release to a new release if the
                                new release does not have any values. If the request already has values,
                                or if there are no values in the current release, this does nothing.
                                This is skipped if the ResetValues flag is set, in which case the
                                request values are not altered.
                              type: boolean
                            subNotes:
                              default: false
                              description: SubNotes determines whether sub-notes are
                                rendered in the chart.
                              type: boolean
                            upgradeCRDs:
                              default: false
                              description: |-
                                UpgradeCRDs upgrade CRDs from the Helm Chart's crds directory
                                By default, CRDs are not applied during Helm upgrade action by Helm
                                https://helm.sh/docs/chart_best_practices/custom_resource_definitions/
                              type: boolean
                          type: object
                        wait:
                          default: false
                          description: |-
                            if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                            are in a ready state before marking the release as successful. It will wait for as long as --timeout
                            Default to false
                          type: boolean
                        waitForJobs:
                          default: false
                          description: |-
                            if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                            It will wait for as long as --timeout
                            Default to false
                          type: boolean
                      type: object
                    registryCredentialsConfig:
                      description: |-
                        RegistryCredentialsConfig is an optional configuration for credentials,
                        including information to connect to private registries.
                      properties:
                        ca:
                          description: |-
                            CASecretRef references a secret containing the TLS CA certificate
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            key: ca.crt
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        credentials:
                          description: |-
                            CredentialsSecretRef references a secret containing credentials
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        insecureSkipTLSVerify:
                          description: InsecureSkipTLSVerify controls server certificate
                            verification.
                          type: boolean
                        key:
                          description: |-
                            Key specifies the key within the CredentialsSecretRef containing the data
                            If not specified, it defaults to the only key in the secret if there's just one.
                          type: string
                        plainHTTP:
                          description: PlainHTTP indicates to use insecure HTTP connections
                            for the chart download
                          type: boolean
                      type: object
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: |-
                        RepositoryName is the name helm chart repository
                        This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                        It is ignored if RepositoryURL references a Flux Source.
                        Must be defined otherwise.
                      type: string
                    repositoryURL:
                      description: |-
                        RepositoryURL is the URL helm chart repository
                        It can point to a traditional HTTP-based repository or an OCI registry.
                        Examples:
                          - HTTP Repository: https://charts.example.com/stable
                          - OCI Registry: oci://registry.example.com/namespace/charts
                          - GitHub Pages: https://<username>.github.io/<repository>/
                          - Any other valid URL where Helm charts are hosted.

                        Alternatively, it can be a Flux source reference:
                          <flux source kind>://<flux source namespace>/<flux source name>/<path>

                        Where:
                          - <flux source kind> is the type of Flux source (gitrepository, ocirepository, bucket).
                          - <flux source namespace> and <flux source name> are the namespace and name of the Flux Source in the management cluster.
                          - <path> is the path within the source repository where the Helm charts are located.

                        For instance:
                          gitrepository://flux-system/flux-system/charts/projectsveltos

                        Assuming there is a Flux GitRepository named 'flux-system' in the 'flux-system' namespace
                        syncing 'https://github.com/projectsveltos/helm-charts.git/', and the Helm charts are
                        located in the 'charts/projectsveltos' directory of that repository.
                      minLength: 1
                      type: string
                    values:
                      description: |-
                        Values field allows to define configuration for the Helm release.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                      type: string
                    valuesFrom:
                      description: |-
                        ValuesFrom can reference ConfigMap/Secret instances. Within the ConfigMap or Secret data,
                        it is possible to store configuration for the Helm release.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                      items:
                        properties:
                          kind:
                            description: |-
                              Kind of the resource. Supported kinds are:
                              - ConfigMap/Secret
                            enum:
                            - ConfigMap
                            - Secret
                            type: string
                          name:
                            description: |-
                              Name of the referenced resource.
                              Name can be expressed as a template and instantiate using any cluster field.
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referenced resource.
                              For ClusterProfile namespace can be left empty. In such a case, namespace will
                              be implicit set to cluster's namespace.
                              For Profile namespace must be left empty. The Profile namespace will be used.
                              Namespace can be expressed as a template and instantiate using any cluster field.
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates that the referenced resource is not mandatory.
                              If set to true and the resource is not found, the error will be ignored,
                              and Sveltos will continue processing other ValueFroms.
                            type: boolean
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  required:
                  - releaseName
                  - releaseNamespace
                  - repositoryURL
                  type: object
                  x-kubernetes-validations:
                  - message: ChartName must be defined
                    rule: 'self.repositoryURL.startsWith(''http'') ? size(self.chartName)
                      >= 1 : true'
                  - message: ChartName must be defined
                    rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.chartName)
                      >= 1 : true'
                  - message: ChartVersion must be defined
                    rule: 'self.repositoryURL.startsWith(''http'') ? size(self.chartVersion)
                      >= 1 : true'
                  - message: ChartVersion must be defined
                    rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.chartVersion)
                      >= 1 : true'
                  - message: RepositoryName must be defined
                    rule: 'self.repositoryURL.startsWith(''http'') ? size(self.repositoryName)
                      >= 1 : true'
                  - message: RepositoryName must be defined
                    rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.repositoryName)
                      >= 1 : true'
                type: array
                x-kubernetes-list-type: atomic
              kustomizationRefs:
                description: |-
                  Kustomization refs is a list of kustomization paths. Kustomization will
                  be run on those paths and the outcome will be deployed.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                        NOTE: DeploymentType Local cannot be used when the matching cluster is the management cluster itself.
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - flux GitRepository;OCIRepository;Bucket
                        - ConfigMap/Secret
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: |-
                        Name of the referenced resource.
                        Name can be expressed as a template and instantiate using any cluster field.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. The Profile namespace will be used.
                        Namespace can be expressed as a template and instantiate using any cluster field.
                      type: string
                    optional:
                      default: false
                      description: |-
                        Optional indicates that the referenced resource is not mandatory.
                        If set to true and the resource is not found, the error will be ignored,
                        and Sveltos will continue processing other ValueFroms.
                      type: boolean
                    path:
                      description: |-
                        Path to the directory containing the kustomization.yaml file, or the
                        set of plain YAMLs a kustomization.yaml should be generated for.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster)
                      type: string
                    targetNamespace:
                      description: |-
                        TargetNamespace sets or overrides the namespace in the
                        kustomization.yaml file.
                      maxLength: 63
                      minLength: 1
                      type: string
                    values:
                      additionalProperties:
                        type: string
                      description: |-
                        Values is a map[string]string type that allows to define a set of key-value pairs.
                        These key-value pairs can optionally leverage Go templates for further processing.
                        With Sveltos, you can define key-value pairs where the values can be Go templates.
                        These templates have access to management cluster information during deployment. This allows
                        to do more than just replace placeholders. Variables can be used to dynamically
                        construct values based on other resources or variables within the Kustomize output.
                        For example, imagine you have a Region key with a template value like:
                        '{{ index .Cluster.metadata.labels "region" }}'.
                        This template retrieves the region label from the cluster instance metadata.
                        Finally, Sveltos uses these processed values to fill placeholders in the Kustomize output.
                        The output itself can also contain templates, like:
                        region: '{{ default "west" .Region }}'.
                        This way, the final output from Kustomize will have the region set dynamically based on
                        the actual region retrieved earlier.
                      type: object
                    valuesFrom:
                      description: |-
                        ValuesFrom can reference ConfigMap/Secret instances. Within the ConfigMap or Secret data,
                        it is possible to define key-value pairs. These key-value pairs can optionally leverage
                        Go templates for further processing.
                        With Sveltos, you can define key-value pairs where the values can be Go templates.
                        These templates have access to management cluster information during deployment. This allows
                        to do more than just replace placeholders. Variables can be used to dynamically
                        construct values based on other resources or variables within the Kustomize output.
                        For example, imagine you have a Region key with a template value like:
                        '{{ index .Cluster.metadata.labels "region" }}'.
                        This template retrieves the region label from the cluster instance metadata.
                        Finally, Sveltos uses these processed values to fill placeholders in the Kustomize output.
                        The output itself can also contain templates, like:
                        region: '{{ default "west" .Region }}'.
                        This way, the final output from Kustomize will have the region set dynamically based on
                        the actual region retrieved earlier.
                      items:
                        properties:
                          kind:
                            description: |-
                              Kind of the resource. Supported kinds are:
                              - ConfigMap/Secret
                            enum:
                            - ConfigMap
                            - Secret
                            type: string
                          name:
                            description: |-
                              Name of the referenced resource.
                              Name can be expressed as a template and instantiate using any cluster field.
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referenced resource.
                              For ClusterProfile namespace can be left empty. In such a case, namespace will
                              be implicit set to cluster's namespace.
                              For Profile namespace must be left empty. The Profile namespace will be used.
                              Namespace can be expressed as a template and instantiate using any cluster field.
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates that the referenced resource is not mandatory.
                              If set to true and the resource is not found, the error will be ignored,
                              and Sveltos will continue processing other ValueFroms.
                            type: boolean
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              maxConsecutiveFailures:
                description: |-
                  The maximum number of consecutive deployment failures that Sveltos will permit.
                  After this many consecutive failures, the deployment will be considered failed, and Sveltos will stop retrying.
                  This setting applies only to feature deployments, not resource removal.
                  This field is optional. If not set, Sveltos default behavior is to keep retrying.
                type: integer
              maxUpdate:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  The maximum number of clusters that can be updated concurrently.
                  Value can be an absolute number (ex: 5) or a percentage of desired cluster (ex: 10%).
                  Defaults to 100%.
                  Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                  changes, only 30% of matching clusters will be updated in parallel. Only when updates
                  in those cluster succeed, other matching clusters are updated.
                pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                x-kubernetes-int-or-string: true
              patches:
                description: |-
                  Define additional Kustomize inline Patches applied for all resources on this profile
                  Within the Patch Spec you can use templating
                items:
                  description: |-
                    Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                    be applied to.
                  properties:
                    patch:
                      description: |-
                        Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                        an array of operation objects.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                      type: string
                    target:
                      description: Target points to the resources that the patch document
                        should be applied to.
                      properties:
                        annotationSelector:
                          description: |-
                            AnnotationSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource annotations.
                          type: string
                        group:
                          description: |-
                            Group is the API group to select resources from.
                            Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        kind:
                          description: |-
                            Kind of the API Group to select resources from.
                            Together with Group and Version it is capable of unambiguously
                            identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource labels.
                          type: string
                        name:
                          description: Name to match resources with.
                          type: string
                        namespace:
                          description: Namespace to select resources from.
                          type: string
                        version:
                          description: |-
                            Version of the API Group to select resources from.
                            Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                      type: object
                  required:
                  - patch
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              policyRefs:
                description: |-
                  PolicyRefs references all the ConfigMaps/Secrets/Flux Sources containing kubernetes resources
                  that need to be deployed in the matching managed clusters.
                  The values contained in those resources can be static or leverage Go templates for dynamic customization.
                  When expressed as templates, the values are filled in using information from
                  resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - ConfigMap/Secret
                        - flux GitRepository;OCIRepository;Bucket
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: |-
                        Name of the referenced resource.
                        Name can be expressed as a template and instantiate using any cluster field.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. Profile namespace will be used.
                        Namespace can be expressed as a template and instantiate using any cluster field.
                      type: string
                    optional:
                      default: false
                      description: |-
                        Optional indicates that the referenced resource is not mandatory.
                        If set to true and the resource is not found, the error will be ignored,
                        and Sveltos will continue processing other PolicyRefs.
                      type: boolean
                    path:
                      description: |-
                        Path to the directory containing the YAML files.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        Used only for GitRepository;OCIRepository;Bucket
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              reloader:
                default: false
                description: |-
                  Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                  by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                  when a ConfigMap/Secret instance mounted as volume is modified.
                  When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                  starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                type: boolean
              setRefs:
                description: |-
                  SetRefs identifies referenced (cluster)Sets.
                  - ClusterProfile can reference ClusterSet;
                  - Profile can reference Set;
                items:
                  type: string
                type: array
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: |-
                  StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                  the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                  be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                  leave ClusterProfile deployed policies in the Cluster.
                enum:
                - WithdrawPolicies
                - LeavePolicies
                type: string
              syncMode:
                default: Continuous
                description: |-
                  SyncMode specifies how features are synced in a matching workload cluster.
                  - OneTime means, first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such cluster. Any subsequent feature configuration
                  change won't be applied into the matching workload clusters;
                  - Continuous mode ensures that the first time a workload cluster matches a ClusterProfile,
                  the specified features are deployed. Subsequent changes to the feature configuration are also
                  automatically applied to all matching workload clusters.
                  _ SyncModeContinuousWithDriftDetection operates similarly to Continuous mode, but also monitors
                  matching managed clusters for configuration drift. If drift is detected, a reconciliation is
                  triggered to ensure the managed cluster's configuration aligns with the ClusterProfile.
                  - DryRun means no change will be propagated to any matching cluster. A report
                  instead will be generated summarizing what would happen in any matching cluster
                  because of the changes made to ClusterProfile while in DryRun mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
              templateResourceRefs:
                description: |-
                  TemplateResourceRefs is a list of resource to collect from the management cluster.
                  Those resources' values will be used to instantiate templates
                items:
                  properties:
                    identifier:
                      description: |-
                        Identifier is how the resource will be referred to in the
                        template
                      type: string
                    optional:
                      default: false
                      description: |-
                        Optional indicates that the referenced resource is not mandatory.
                        If set to true and the resource is not found, the error will be ignored,
                        and Sveltos will continue processing other TemplateResourceRefs.
                      type: boolean
                    resource:
                      description: |-
                        Resource references a Kubernetes instance in the management
                        cluster to fetch and use during template instantiation.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        Name and namespace can be expressed as a template and instantiate using any cluster field.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - identifier
                  - resource
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - identifier
                x-kubernetes-list-type: map
              tier:
                default: 100
                description: |-
                  Tier controls the order of deployment for ClusterProfile or Profile resources targeting
                  the same cluster resources.
                  Imagine two configurations (ClusterProfiles or Profiles) trying to deploy the same resource (a Kubernetes
                  resource or an helm chart). By default, the first one to reach the cluster "wins" and deploys it.
                  Tier allows you to override this. When conflicts arise, the ClusterProfile or Profile with the **lowest**
                  Tier value takes priority and deploys the resource.
                  Higher Tier values represent lower priority. The default Tier value is 100.
                  Using Tiers provides finer control over resource deployment within your cluster, particularly useful
                  when multiple configurations manage the same resources.
                format: int32
                minimum: 1
                type: integer
              validateHealths:
                description: |-
                  ValidateHealths is a slice of Lua functions to run against
                  the managed cluster to validate the state of those add-ons/applications
                  is healthy
                items:
                  properties:
                    featureID:
                      description: |-
                        FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                        This field indicates when to run this check.
                        For instance:
                        - if set to Helm this check will be run after all helm
                        charts specified in the ClusterProfile are deployed.
                        - if set to Resources this check will be run after the content
                        of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                        PolicyRef sections is deployed
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    group:
                      description: Group of the resource to fetch in the managed Cluster.
                      type: string
                    kind:
                      description: Kind of the resource to fetch in the managed Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            - Has
                            - DoesNotHave
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        type: object
                      type: array
                    name:
                      description: Name is the name of this check
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource to fetch in the managed Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    script:
                      description: |-
                        Script is a text containing a lua script.
                        Must return struct with field "health"
                        representing whether object is a match (true or false)
                      type: string
                    version:
                      description: Version of the resource to fetch in the managed
                        Cluster.
                      type: string
                  required:
                  - featureID
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: Status defines the observed state of ClusterProfile/Profile
            properties:
              dependenciesHash:
                description: |-
                  DependenciesHash is a hash representing the set of clusters where this ClusterProfile
                  must be deployed, based on the combined configuration of its dependencies.
                format: byte
                type: string
              matchingClusters:
                description: |-
                  MatchingClusterRefs reference all the clusters currently matching
                  ClusterProfile ClusterSelector
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              updatedClusters:
                description: |-
                  UpdatedClusters contains information all the cluster currently matching
                  ClusterProfile ClusterSelector and already updated to latest ClusterProfile
                  Spec
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
              updatingClusters:
                description: |-
                  UpdatingClusters reference all the cluster currently matching
                  ClusterProfile ClusterSelector and being updated
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterreports.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterReport
    listKind: ClusterReportList
    plural: clusterreports
    singular: clusterreport
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterReport is the Schema for the clusterreports API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterReportSpec defines the desired state of ClusterReport
            properties:
              clusterName:
                description: |-
                  ClusterName is the name of the CAPI Cluster this ClusterReport
                  is for.
                type: string
              clusterNamespace:
                description: |-
                  ClusterNamespace is the namespace of the CAPI Cluster this
                  ClusterReport is for.
                type: string
            required:
            - clusterName
            - clusterNamespace
            type: object
          status:
            description: ClusterReportStatus defines the observed state of ClusterReport
            properties:
              helmResourceReports:
                description: |-
                  HelmResourceReports contains report on helm resources (when in pull mode, helm template resources are
                  deployed directly)
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Kubernetes
                        resource.
                      enum:
                      - No Action
                      - Create
                      - Update
                      - Delete
                      - Conflict
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    resource:
                      description: Resource contains information about Kubernetes
                        Resource
                      properties:
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        ignoreForConfigurationDrift:
                          default: false
                          description: |-
                            IgnoreForConfigurationDrift indicates to not track resource
                            for configuration drift detection.
                            This field has a meaning only when mode is ContinuousWithDriftDetection
                          type: boolean
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        lastAppliedTime:
                          description: LastAppliedTime identifies when this resource
                            was last applied to the cluster.
                          format: date-time
                          type: string
                        name:
                          description: Name of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource deployed in the Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        version:
                          description: Version of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - version
                      type: object
                  required:
                  - resource
                  type: object
                type: array
              kustomizeResourceReports:
                description: |-
                  KustomizeResourceReports contains report on Kubernetes resources
                  deployed because of KustomizationRefs
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Kubernetes
                        resource.
                      enum:
                      - No Action
                      - Create
                      - Update
                      - Delete
                      - Conflict
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    resource:
                      description: Resource contains information about Kubernetes
                        Resource
                      properties:
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        ignoreForConfigurationDrift:
                          default: false
                          description: |-
                            IgnoreForConfigurationDrift indicates to not track resource
                            for configuration drift detection.
                            This field has a meaning only when mode is ContinuousWithDriftDetection
                          type: boolean
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        lastAppliedTime:
                          description: LastAppliedTime identifies when this resource
                            was last applied to the cluster.
                          format: date-time
                          type: string
                        name:
                          description: Name of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource deployed in the Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        version:
                          description: Version of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - version
                      type: object
                  required:
                  - resource
                  type: object
                type: array
              releaseReports:
                description: ReleaseReports contains report on helm releases
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Helm
                        Chart
                      enum:
                      - No Action
                      - Install
                      - Upgrade
                      - Delete
                      - Conflict
                      - Update Values
                      type: string
                    chartName:
                      description: ReleaseName of the release deployed in the CAPI
                        Cluster.
                      minLength: 1
                      type: string
                    chartVersion:
                      description: |-
                        ChartVersion is the version of the helm chart deployed
                        in the CAPI Cluster.
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    releaseNamespace:
                      description: Namespace where release is deployed in the CAPI
                        Cluster.
                      minLength: 1
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseNamespace
                  type: object
                type: array
              resourceReports:
                description: |-
                  ResourceReports contains report on Kubernetes resources
                  deployed because of PolicyRefs
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Kubernetes
                        resource.
                      enum:
                      - No Action
                      - Create
                      - Update
                      - Delete
                      - Conflict
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    resource:
                      description: Resource contains information about Kubernetes
                        Resource
                      properties:
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        ignoreForConfigurationDrift:
                          default: false
                          description: |-
                            IgnoreForConfigurationDrift indicates to not track resource
                            for configuration drift detection.
                            This field has a meaning only when mode is ContinuousWithDriftDetection
                          type: boolean
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        lastAppliedTime:
                          description: LastAppliedTime identifies when this resource
                            was last applied to the cluster.
                          format: date-time
                          type: string
                        name:
                          description: Name of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource deployed in the Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        version:
                          description: Version of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - version
                      type: object
                  required:
                  - resource
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clustersummaries.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterSummary
    listKind: ClusterSummaryList
    plural: clustersummaries
    singular: clustersummary
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of ClusterSummary
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Indicates whether HelmCharts are all provisioned
      jsonPath: .status.featureSummaries[?(@.featureID=="Helm")].status
      name: HelmCharts
      priority: 2
      type: string
    - description: Indicates whether KustomizeRefs are all provisioned
      jsonPath: .status.featureSummaries[?(@.featureID=="Kustomize")].status
      name: KustomizeRefs
      priority: 2
      type: string
    - description: Indicates whether PolicyRefs are all provisioned
      jsonPath: .status.featureSummaries[?(@.featureID=="Resources")].status
      name: PolicyRefs
      priority: 2
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterSummary is the Schema for the clustersummaries API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSummarySpec defines the desired state of ClusterSummary
            properties:
              clusterName:
                description: ClusterName is the name of the workload Cluster this
                  ClusterSummary is for.
                type: string
              clusterNamespace:
                description: |-
                  ClusterNamespace is the namespace of the workload Cluster this
                  ClusterSummary is for.
                type: string
              clusterProfileSpec:
                description: |-
                  ClusterProfileSpec represent the configuration that will be applied to
                  the workload cluster.
                properties:
                  clusterRefs:
                    description: ClusterRefs identifies clusters to associate to.
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  clusterSelector:
                    description: ClusterSelector identifies clusters to associate
                      to.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  continueOnConflict:
                    default: false
                    description: |-
                      By default (when ContinueOnConflict is unset or set to false), Sveltos stops deployment after
                      encountering the first conflict (e.g., another ClusterProfile already deployed the resource).
                      If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                      if conflicts are detected for previous resources.
                    type: boolean
                  continueOnError:
                    default: false
                    description: |-
                      By default (when ContinueOnError is unset or set to false), Sveltos stops deployment after
                      encountering the first error.
                      If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                      if errors are detected for previous resources.
                    type: boolean
                  dependsOn:
                    description: |-
                      DependsOn specifies a list of other ClusterProfiles that this instance depends on.
                      In any managed cluster that matches this ClusterProfile, the add-ons and applications
                      defined in this instance will not be deployed until all add-ons and applications in the
                      ClusterProfiles listed as dependencies are deployed.
                    items:
                      type: string
                    type: array
                  driftExclusions:
                    description: |-
                      DriftExclusions is a list of configuration drift exclusions to be applied when syncMode is
                      set to ContinuousWithDriftDetection. Each exclusion specifies JSON6902 paths to ignore
                      when evaluating drift, optionally targeting specific resources and features.
                    items:
                      properties:
                        paths:
                          description: Paths is a slice of JSON6902 paths to exclude
                            from configuration drift evaluation.
                          items:
                            type: string
                          type: array
                        target:
                          description: Target points to the resources that the paths
                            refers to.
                          properties:
                            annotationSelector:
                              description: |-
                                AnnotationSelector is a string that follows the label selection expression
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                It matches with the resource annotations.
                              type: string
                            group:
                              description: |-
                                Group is the API group to select resources from.
                                Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                              type: string
                            kind:
                              description: |-
                                Kind of the API Group to select resources from.
                                Together with Group and Version it is capable of unambiguously
                                identifying and/or selecting resources.
                                https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                              type: string
                            labelSelector:
                              description: |-
                                LabelSelector is a string that follows the label selection expression
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                It matches with the resource labels.
                              type: string
                            name:
                              description: Name to match resources with.
                              type: string
                            namespace:
                              description: Namespace to select resources from.
                              type: string
                            version:
                              description: |-
                                Version of the API Group to select resources from.
                                Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                              type: string
                          type: object
                      required:
                      - paths
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  extraAnnotations:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                      deployed in a managed cluster based on this ClusterProfile/Profile instance.
                      **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                      `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                      (Deprecated use Patches instead)
                    type: object
                  extraLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                      a managed cluster based on this ClusterProfile/Profile instance.
                      **Important:** If a resource deployed by Sveltos already has a label with a key present in
                      `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                      (Deprecated use Patches instead)
                    type: object
                  helmCharts:
                    description: Helm charts is a list of helm charts that need to
                      be deployed
                    items:
                      properties:
                        chartName:
                          description: |-
                            ChartName is the chart name
                            This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                            Must be defined otherwise.
                          type: string
                        chartVersion:
                          description: |-
                            ChartVersion is the chart version
                            This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                            It is ignored if RepositoryURL references a Flux Source.
                            Must be defined otherwise.
                          type: string
                        helmChartAction:
                          default: Install
                          description: HelmChartAction is the action that will be
                            taken on the helm chart
                          enum:
                          - Install
                          - Uninstall
                          type: string
                        options:
                          description: Options allows to set flags which are used
                            during installation.
                          properties:
                            atomic:
                              default: false
                              description: |-
                                if set, the installation process deletes the installation/upgrades on failure.
                                The --wait flag will be set automatically if --atomic is used
                                Default to false
                              type: boolean
                            dependencyUpdate:
                              default: false
                              description: |-
                                update dependencies if they are missing before installing the chart
                                Default to false
                              type: boolean
                            description:
                              description: Description is the description of an helm
                                operation
                              type: string
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install/upgrade/uninstall
                                Default to false
                              type: boolean
                            disableOpenAPIValidation:
                              default: false
                              description: |-
                                if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                                Default to false
                              type: boolean
                            enableClientCache:
                              default: false
                              description: EnableClientCache is a flag to enable Helm
                                client cache. If it is not specified, it will be set
                                to false.
                              type: boolean
                            installOptions:
                              description: HelmInstallOptions are options specific
                                to helm install
                              properties:
                                createNamespace:
                                  default: true
                                  description: Create the release namespace if not
                                    present. Defaults to true
                                  type: boolean
                                disableHooks:
                                  default: false
                                  description: |-
                                    prevent hooks from running during install. If set to true, overrides
                                    DisableHooks in HelmOptions. Use this one when you want to selective
                                    disable hooks on install
                                    Default to false
                                  type: boolean
                                replace:
                                  default: true
                                  description: Replaces if set indicates to replace
                                    an older release with this one
                                  type: boolean
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels that would be added to release metadata.
                              type: object
                            skipCRDs:
                              default: false
                              description: |-
                                SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                                By default, CRDs are installed if not already present.
                              type: boolean
                            skipSchemaValidation:
                              default: false
                              description: SkipSchemaValidation determines if JSON
                                schema validation is disabled.
                              type: boolean
                            timeout:
                              description: time to wait for any individual Kubernetes
                                operation (like Jobs for hooks) (default 5m0s)
                              type: string
                            uninstallOptions:
                              description: HelmUninstallOptions are options specific
                                to helm uninstall
                              properties:
                                deletionPropagation:
                                  description: DeletionPropagation
                                  enum:
                                  - orphan
                                  - foreground
                                  - background
                                  type: string
                                disableHooks:
                                  default: false
                                  description: |-
                                    prevent hooks from running during install. If set to true, overrides
                                    DisableHooks in HelmOptions. Use this one when you want to selective
                                    disable hooks on uninstall
                                    Default to false
                                  type: boolean
                                keepHistory:
                                  description: |-
                                    When uninstall a chart with this flag, Helm removes the resources associated with the chart,
                                    but it keeps the release information. This allows to see details about the uninstalled release
                                    using the helm history command.
                                  type: boolean
                              type: object
                            upgradeOptions:
                              description: HelmUpgradeOptions are options specific
                                to helm upgrade
                              properties:
                                cleanupOnFail:
                                  default: false
                                  description: CleanupOnFail will, if true, cause
                                    the upgrade to delete newly-created resources
                                    on a failed update.
                                  type: boolean
                                disableHooks:
                                  default: false
                                  description: |-
                                    prevent hooks from running during install. If set to true, overrides
                                    DisableHooks in HelmOptions. Use this one when you want to selective
                                    disable hooks on upgrade
                                    Default to false
                                  type: boolean
                                force:
                                  default: false
                                  description: |-
                                    Force will, if set to `true`, ignore certain warnings and perform the upgrade anyway.
                                    This should be used with caution.
                                  type: boolean
                                maxHistory:
                                  default: 2
                                  description: |-
                                    MaxHistory limits the maximum number of revisions saved per release
                                    Default to 2
                                  type: integer
                                recreate:
                                  default: false
                                  description: Recreate will (if true) recreate pods
                                    after a rollback.
                                  type: boolean
                                resetThenReuseValues:
                                  default: false
                                  description: ResetThenReuseValues will reset the
                                    values to the chart's built-ins then merge with
                                    user's last supplied values.
                                  type: boolean
                                resetValues:
                                  default: false
                                  description: ResetValues will reset the values to
                                    the chart's built-ins rather than merging with
                                    existing.
                                  type: boolean
                                reuseValues:
                                  default: false
                                  description: |-
                                    ReuseValues copies values from the current release to a new release if the
                                    new release does not have any values. If the request already has values,
                                    or if there are no values in the current release, this does nothing.
                                    This is skipped if the ResetValues flag is set, in which case the
                                    request values are not altered.
                                  type: boolean
                                subNotes:
                                  default: false
                                  description: SubNotes determines whether sub-notes
                                    are rendered in the chart.
                                  type: boolean
                                upgradeCRDs:
                                  default: false
                                  description: |-
                                    UpgradeCRDs upgrade CRDs from the Helm Chart's crds directory
                                    By default, CRDs are not applied during Helm upgrade action by Helm
                                    https://helm.sh/docs/chart_best_practices/custom_resource_definitions/
                                  type: boolean
                              type: object
                            wait:
                              default: false
                              description: |-
                                if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                                are in a ready state before marking the release as successful. It will wait for as long as --timeout
                                Default to false
                              type: boolean
                            waitForJobs:
                              default: false
                              description: |-
                                if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                                It will wait for as long as --timeout
                                Default to false
                              type: boolean
                          type: object
                        registryCredentialsConfig:
                          description: |-
                            RegistryCredentialsConfig is an optional configuration for credentials,
                            including information to connect to private registries.
                          properties:
                            ca:
                              description: |-
                                CASecretRef references a secret containing the TLS CA certificate
                                For ClusterProfile namespace can be left empty. In such a case, namespace will
                                be implicit set to cluster's namespace.
                                key: ca.crt
                              properties:
                                name:
                                  description: name is unique within a namespace to
                                    reference a secret resource.
                                  type: string
                                namespace:
                                  description: namespace defines the space within
                                    which the secret name must be unique.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            credentials:
                              description: |-
                                CredentialsSecretRef references a secret containing credentials
                                For ClusterProfile namespace can be left empty. In such a case, namespace will
                                be implicit set to cluster's namespace.
                              properties:
                                name:
                                  description: name is unique within a namespace to
                                    reference a secret resource.
                                  type: string
                                namespace:
                                  description: namespace defines the space within
                                    which the secret name must be unique.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            insecureSkipTLSVerify:
                              description: InsecureSkipTLSVerify controls server certificate
                                verification.
                              type: boolean
                            key:
                              description: |-
                                Key specifies the key within the CredentialsSecretRef containing the data
                                If not specified, it defaults to the only key in the secret if there's just one.
                              type: string
                            plainHTTP:
                              description: PlainHTTP indicates to use insecure HTTP
                                connections for the chart download
                              type: boolean
                          type: object
                        releaseName:
                          description: ReleaseName is the chart release
                          minLength: 1
                          type: string
                        releaseNamespace:
                          description: ReleaseNamespace is the namespace release will
                            be installed
                          minLength: 1
                          type: string
                        repositoryName:
                          description: |-
                            RepositoryName is the name helm chart repository
                            This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                            It is ignored if RepositoryURL references a Flux Source.
                            Must be defined otherwise.
                          type: string
                        repositoryURL:
                          description: |-
                            RepositoryURL is the URL helm chart repository
                            It can point to a traditional HTTP-based repository or an OCI registry.
                            Examples:
                              - HTTP Repository: https://charts.example.com/stable
                              - OCI Registry: oci://registry.example.com/namespace/charts
                              - GitHub Pages: https://<username>.github.io/<repository>/
                              - Any other valid URL where Helm charts are hosted.

                            Alternatively, it can be a Flux source reference:
                              <flux source kind>://<flux source namespace>/<flux source name>/<path>

                            Where:
                              - <flux source kind> is the type of Flux source (gitrepository, ocirepository, bucket).
                              - <flux source namespace> and <flux source name> are the namespace and name of the Flux Source in the management cluster.
                              - <path> is the path within the source repository where the Helm charts are located.

                            For instance:
                              gitrepository://flux-system/flux-system/charts/projectsveltos

                            Assuming there is a Flux GitRepository named 'flux-system' in the 'flux-system' namespace
                            syncing 'https://github.com/projectsveltos/helm-charts.git/', and the Helm charts are
                            located in the 'charts/projectsveltos' directory of that repository.
                          minLength: 1
                          type: string
                        values:
                          description: |-
                            Values field allows to define configuration for the Helm release.
                            These values can be static or leverage Go templates for dynamic customization.
                            When expressed as templates, the values are filled in using information from
                            resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                          type: string
                        valuesFrom:
                          description: |-
                            ValuesFrom can reference ConfigMap/Secret instances. Within the ConfigMap or Secret data,
                            it is possible to store configuration for the Helm release.
                            These values can be static or leverage Go templates for dynamic customization.
                            When expressed as templates, the values are filled in using information from
                            resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                          items:
                            properties:
                              kind:
                                description: |-
                                  Kind of the resource. Supported kinds are:
                                  - ConfigMap/Secret
                                enum:
                                - ConfigMap
                                - Secret
                                type: string
                              name:
                                description: |-
                                  Name of the referenced resource.
                                  Name can be expressed as a template and instantiate using any cluster field.
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace of the referenced resource.
                                  For ClusterProfile namespace can be left empty. In such a case, namespace will
                                  be implicit set to cluster's namespace.
                                  For Profile namespace must be left empty. The Profile namespace will be used.
                                  Namespace can be expressed as a template and instantiate using any cluster field.
                                type: string
                              optional:
                                default: false
                                description: |-
                                  Optional indicates that the referenced resource is not mandatory.
                                  If set to true and the resource is not found, the error will be ignored,
                                  and Sveltos will continue processing other ValueFroms.
                                type: boolean
                            required:
                            - kind
                            - name
                            type: object
                          type: array
                      required:
                      - releaseName
                      - releaseNamespace
                      - repositoryURL
                      type: object
                      x-kubernetes-validations:
                      - message: ChartName must be defined
                        rule: 'self.repositoryURL.startsWith(''http'') ? size(self.chartName)
                          >= 1 : true'
                      - message: ChartName must be defined
                        rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.chartName)
                          >= 1 : true'
                      - message: ChartVersion must be defined
                        rule: 'self.repositoryURL.startsWith(''http'') ? size(self.chartVersion)
                          >= 1 : true'
                      - message: ChartVersion must be defined
                        rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.chartVersion)
                          >= 1 : true'
                      - message: RepositoryName must be defined
                        rule: 'self.repositoryURL.startsWith(''http'') ? size(self.repositoryName)
                          >= 1 : true'
                      - message: RepositoryName must be defined
                        rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.repositoryName)
                          >= 1 : true'
                    type: array
                    x-kubernetes-list-type: atomic
                  kustomizationRefs:
                    description: |-
                      Kustomization refs is a list of kustomization paths. Kustomization will
                      be run on those paths and the outcome will be deployed.
                    items:
                      properties:
                        deploymentType:
                          default: Remote
                          description: |-
                            DeploymentType indicates whether resources need to be deployed
                            into the management cluster (local) or the managed cluster (remote)
                            NOTE: DeploymentType Local cannot be used when the matching cluster is the management cluster itself.
                          enum:
                          - Local
                          - Remote
                          type: string
                        kind:
                          description: |-
                            Kind of the resource. Supported kinds are:
                            - flux GitRepository;OCIRepository;Bucket
                            - ConfigMap/Secret
                          enum:
                          - GitRepository
                          - OCIRepository
                          - Bucket
                          - ConfigMap
                          - Secret
                          type: string
                        name:
                          description: |-
                            Name of the referenced resource.
                            Name can be expressed as a template and instantiate using any cluster field.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referenced resource.
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            For Profile namespace must be left empty. The Profile namespace will be used.
                            Namespace can be expressed as a template and instantiate using any cluster field.
                          type: string
                        optional:
                          default: false
                          description: |-
                            Optional indicates that the referenced resource is not mandatory.
                            If set to true and the resource is not found, the error will be ignored,
                            and Sveltos will continue processing other ValueFroms.
                          type: boolean
                        path:
                          description: |-
                            Path to the directory containing the kustomization.yaml file, or the
                            set of plain YAMLs a kustomization.yaml should be generated for.
                            Defaults to 'None', which translates to the root path of the SourceRef.
                            These values can be static or leverage Go templates for dynamic customization.
                            When expressed as templates, the values are filled in using information from
                            resources within the management cluster before deployment (Cluster)
                          type: string
                        targetNamespace:
                          description: |-
                            TargetNamespace sets or overrides the namespace in the
                            kustomization.yaml file.
                          maxLength: 63
                          minLength: 1
                          type: string
                        values:
                          additionalProperties:
                            type: string
                          description: |-
                            Values is a map[string]string type that allows to define a set of key-value pairs.
                            These key-value pairs can optionally leverage Go templates for further processing.
                            With Sveltos, you can define key-value pairs where the values can be Go templates.
                            These templates have access to management cluster information during deployment. This allows
                            to do more than just replace placeholders. Variables can be used to dynamically
                            construct values based on other resources or variables within the Kustomize output.
                            For example, imagine you have a Region key with a template value like:
                            '{{ index .Cluster.metadata.labels "region" }}'.
                            This template retrieves the region label from the cluster instance metadata.
                            Finally, Sveltos uses these processed values to fill placeholders in the Kustomize output.
                            The output itself can also contain templates, like:
                            region: '{{ default "west" .Region }}'.
                            This way, the final output from Kustomize will have the region set dynamically based on
                            the actual region retrieved earlier.
                          type: object
                        valuesFrom:
                          description: |-
                            ValuesFrom can reference ConfigMap/Secret instances. Within the ConfigMap or Secret data,
                            it is possible to define key-value pairs. These key-value pairs can optionally leverage
                            Go templates for further processing.
                            With Sveltos, you can define key-value pairs where the values can be Go templates.
                            These templates have access to management cluster information during deployment. This allows
                            to do more than just replace placeholders. Variables can be used to dynamically
                            construct values based on other resources or variables within the Kustomize output.
                            For example, imagine you have a Region key with a template value like:
                            '{{ index .Cluster.metadata.labels "region" }}'.
                            This template retrieves the region label from the cluster instance metadata.
                            Finally, Sveltos uses these processed values to fill placeholders in the Kustomize output.
                            The output itself can also contain templates, like:
                            region: '{{ default "west" .Region }}'.
                            This way, the final output from Kustomize will have the region set dynamically based on
                            the actual region retrieved earlier.
                          items:
                            properties:
                              kind:
                                description: |-
                                  Kind of the resource. Supported kinds are:
                                  - ConfigMap/Secret
                                enum:
                                - ConfigMap
                                - Secret
                                type: string
                              name:
                                description: |-
                                  Name of the referenced resource.
                                  Name can be expressed as a template and instantiate using any cluster field.
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace of the referenced resource.
                                  For ClusterProfile namespace can be left empty. In such a case, namespace will
                                  be implicit set to cluster's namespace.
                                  For Profile namespace must be left empty. The Profile namespace will be used.
                                  Namespace can be expressed as a template and instantiate using any cluster field.
                                type: string
                              optional:
                                default: false
                                description: |-
                                  Optional indicates that the referenced resource is not mandatory.
                                  If set to true and the resource is not found, the error will be ignored,
                                  and Sveltos will continue processing other ValueFroms.
                                type: boolean
                            required:
                            - kind
                            - name
                            type: object
                          type: array
                      required:
                      - kind
                      - name
                      - namespace
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  maxConsecutiveFailures:
                    description: |-
                      The maximum number of consecutive deployment failures that Sveltos will permit.
                      After this many consecutive failures, the deployment will be considered failed, and Sveltos will stop retrying.
                      This setting applies only to feature deployments, not resource removal.
                      This field is optional. If not set, Sveltos default behavior is to keep retrying.
                    type: integer
                  maxUpdate:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      The maximum number of clusters that can be updated concurrently.
                      Value can be an absolute number (ex: 5) or a percentage of desired cluster (ex: 10%).
                      Defaults to 100%.
                      Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                      changes, only 30% of matching clusters will be updated in parallel. Only when updates
                      in those cluster succeed, other matching clusters are updated.
                    pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                    x-kubernetes-int-or-string: true
                  patches:
                    description: |-
                      Define additional Kustomize inline Patches applied for all resources on this profile
                      Within the Patch Spec you can use templating
                    items:
                      description: |-
                        Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                        be applied to.
                      properties:
                        patch:
                          description: |-
                            Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                            an array of operation objects.
                            These values can be static or leverage Go templates for dynamic customization.
                            When expressed as templates, the values are filled in using information from
                            resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                          type: string
                        target:
                          description: Target points to the resources that the patch
                            document should be applied to.
                          properties:
                            annotationSelector:
                              description: |-
                                AnnotationSelector is a string that follows the label selection expression
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                It matches with the resource annotations.
                              type: string
                            group:
                              description: |-
                                Group is the API group to select resources from.
                                Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                              type: string
                            kind:
                              description: |-
                                Kind of the API Group to select resources from.
                                Together with Group and Version it is capable of unambiguously
                                identifying and/or selecting resources.
                                https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                              type: string
                            labelSelector:
                              description: |-
                                LabelSelector is a string that follows the label selection expression
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                It matches with the resource labels.
                              type: string
                            name:
                              description: Name to match resources with.
                              type: string
                            namespace:
                              description: Namespace to select resources from.
                              type: string
                            version:
                              description: |-
                                Version of the API Group to select resources from.
                                Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                              type: string
                          type: object
                      required:
                      - patch
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  policyRefs:
                    description: |-
                      PolicyRefs references all the ConfigMaps/Secrets/Flux Sources containing kubernetes resources
                      that need to be deployed in the matching managed clusters.
                      The values contained in those resources can be static or leverage Go templates for dynamic customization.
                      When expressed as templates, the values are filled in using information from
                      resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                    items:
                      properties:
                        deploymentType:
                          default: Remote
                          description: |-
                            DeploymentType indicates whether resources need to be deployed
                            into the management cluster (local) or the managed cluster (remote)
                          enum:
                          - Local
                          - Remote
                          type: string
                        kind:
                          description: |-
                            Kind of the resource. Supported kinds are:
                            - ConfigMap/Secret
                            - flux GitRepository;OCIRepository;Bucket
                          enum:
                          - GitRepository
                          - OCIRepository
                          - Bucket
                          - ConfigMap
                          - Secret
                          type: string
                        name:
                          description: |-
                            Name of the referenced resource.
                            Name can be expressed as a template and instantiate using any cluster field.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referenced resource.
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            For Profile namespace must be left empty. Profile namespace will be used.
                            Namespace can be expressed as a template and instantiate using any cluster field.
                          type: string
                        optional:
                          default: false
                          description: |-
                            Optional indicates that the referenced resource is not mandatory.
                            If set to true and the resource is not found, the error will be ignored,
                            and Sveltos will continue processing other PolicyRefs.
                          type: boolean
                        path:
                          description: |-
                            Path to the directory containing the YAML files.
                            Defaults to 'None', which translates to the root path of the SourceRef.
                            Used only for GitRepository;OCIRepository;Bucket
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  reloader:
                    default: false
                    description: |-
                      Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                      by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                      when a ConfigMap/Secret instance mounted as volume is modified.
                      When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                      starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                    type: boolean
                  setRefs:
                    description: |-
                      SetRefs identifies referenced (cluster)Sets.
                      - ClusterProfile can reference ClusterSet;
                      - Profile can reference Set;
                    items:
                      type: string
                    type: array
                  stopMatchingBehavior:
                    default: WithdrawPolicies
                    description: |-
                      StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                      the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                      be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                      leave ClusterProfile deployed policies in the Cluster.
                    enum:
                    - WithdrawPolicies
                    - LeavePolicies
                    type: string
                  syncMode:
                    default: Continuous
                    description: |-
                      SyncMode specifies how features are synced in a matching workload cluster.
                      - OneTime means, first time a workload cluster matches the ClusterProfile,
                      features will be deployed in such cluster. Any subsequent feature configuration
                      change won't be applied into the matching workload clusters;
                      - Continuous mode ensures that the first time a workload cluster matches a ClusterProfile,
                      the specified features are deployed. Subsequent changes to the feature configuration are also
                      automatically applied to all matching workload clusters.
                      _ SyncModeContinuousWithDriftDetection operates similarly to Continuous mode, but also monitors
                      matching managed clusters for configuration drift. If drift is detected, a reconciliation is
                      triggered to ensure the managed cluster's configuration aligns with the ClusterProfile.
                      - DryRun means no change will be propagated to any matching cluster. A report
                      instead will be generated summarizing what would happen in any matching cluster
                      because of the changes made to ClusterProfile while in DryRun mode.
                    enum:
                    - OneTime
                    - Continuous
                    - ContinuousWithDriftDetection
                    - DryRun
                    type: string
                  templateResourceRefs:
                    description: |-
                      TemplateResourceRefs is a list of resource to collect from the management cluster.
                      Those resources' values will be used to instantiate templates
                    items:
                      properties:
                        identifier:
                          description: |-
                            Identifier is how the resource will be referred to in the
                            template
                          type: string
                        optional:
                          default: false
                          description: |-
                            Optional indicates that the referenced resource is not mandatory.
                            If set to true and the resource is not found, the error will be ignored,
                            and Sveltos will continue processing other TemplateResourceRefs.
                          type: boolean
                        resource:
                          description: |-
                            Resource references a Kubernetes instance in the management
                            cluster to fetch and use during template instantiation.
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            Name and namespace can be expressed as a template and instantiate using any cluster field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - identifier
                      - resource
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - identifier
                    x-kubernetes-list-type: map
                  tier:
                    default: 100
                    description: |-
                      Tier controls the order of deployment for ClusterProfile or Profile resources targeting
                      the same cluster resources.
                      Imagine two configurations (ClusterProfiles or Profiles) trying to deploy the same resource (a Kubernetes
                      resource or an helm chart). By default, the first one to reach the cluster "wins" and deploys it.
                      Tier allows you to override this. When conflicts arise, the ClusterProfile or Profile with the **lowest**
                      Tier value takes priority and deploys the resource.
                      Higher Tier values represent lower priority. The default Tier value is 100.
                      Using Tiers provides finer control over resource deployment within your cluster, particularly useful
                      when multiple configurations manage the same resources.
                    format: int32
                    minimum: 1
                    type: integer
                  validateHealths:
                    description: |-
                      ValidateHealths is a slice of Lua functions to run against
                      the managed cluster to validate the state of those add-ons/applications
                      is healthy
                    items:
                      properties:
                        featureID:
                          description: |-
                            FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                            This field indicates when to run this check.
                            For instance:
                            - if set to Helm this check will be run after all helm
                            charts specified in the ClusterProfile are deployed.
                            - if set to Resources this check will be run after the content
                            of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                            PolicyRef sections is deployed
                          enum:
                          - Resources
                          - Helm
                          - Kustomize
                          type: string
                        group:
                          description: Group of the resource to fetch in the managed
                            Cluster.
                          type: string
                        kind:
                          description: Kind of the resource to fetch in the managed
                            Cluster.
                          minLength: 1
                          type: string
                        labelFilters:
                          description: LabelFilters allows to filter resources based
                            on current labels.
                          items:
                            properties:
                              key:
                                description: Key is the label key
                                type: string
                              operation:
                                description: Operation is the comparison operation
                                enum:
                                - Equal
                                - Different
                                - Has
                                - DoesNotHave
                                type: string
                              value:
                                description: Value is the label value
                                type: string
                            required:
                            - key
                            - operation
                            type: object
                          type: array
                        name:
                          description: Name is the name of this check
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource to fetch in the managed Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        script:
                          description: |-
                            Script is a text containing a lua script.
                            Must return struct with field "health"
                            representing whether object is a match (true or false)
                          type: string
                        version:
                          description: Version of the resource to fetch in the managed
                            Cluster.
                          type: string
                      required:
                      - featureID
                      - group
                      - kind
                      - name
                      - version
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              clusterType:
                description: ClusterType is the type of Cluster
                type: string
            required:
            - clusterName
            - clusterNamespace
            - clusterType
            type: object
          status:
            description: ClusterSummaryStatus defines the observed state of ClusterSummary
            properties:
              dependencies:
                description: |-
                  Dependencies is a summary reporting the status of the dependencies
                  for the associated ClusterProfile
                type: string
              deployedGVKs:
                description: |-
                  DeployedGVKs reports the list of GVKs deployed by ClusterSummary
                  in a managed cluster
                items:
                  properties:
                    deployedGroupVersionKind:
                      description: |-
                        DeployedGroupVersionKind contains all GroupVersionKinds deployed in either
                        the workload cluster or the management cluster because of this feature.
                        Each element has format kind.version.group
                      items:
                        type: string
                      type: array
                    featureID:
                      description: FeatureID is an indentifier of the feature whose
                        status is reported
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                  required:
                  - featureID
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - featureID
                x-kubernetes-list-type: map
              failureMessage:
                description: |-
                  FailureMessage reports any error encountered during the reconciliation of the ClusterSummary
                  instance itself, *excluding* errors related to the deployment of individual features.
                type: string
              featureSummaries:
                description: |-
                  FeatureSummaries reports the status of each workload cluster feature
                  directly managed by ClusterProfile.
                items:
                  description: |-
                    FeatureSummary contains a summary of the state of a workload
                    cluster feature.
                  properties:
                    consecutiveFailures:
                      description: The number of consecutive deployment failures.
                      type: integer
                    deployedGroupVersionKind:
                      description: |-
                        DeployedGroupVersionKind contains all GroupVersionKinds deployed in either
                        the workload cluster or the management cluster because of this feature.
                        Each element has format kind.version.group
                        Deprecated: Replaced by FeatureDeploymentInfo field instead
                      items:
                        type: string
                      type: array
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    failureReason:
                      description: FailureReason indicates the type of error that
                        occurred.
                      type: string
                    featureID:
                      description: FeatureID is an indentifier of the feature whose
                        status is reported
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    hash:
                      description: |-
                        Hash represents of a unique value for a feature at a fixed point in
                        time
                      format: byte
                      type: string
                    lastAppliedTime:
                      description: LastAppliedTime is the time feature was last reconciled
                      format: date-time
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - FailedNonRetriable
                      - Removing
                      - Removed
                      - AgentRemoving
                      type: string
                  required:
                  - featureID
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - featureID
                x-kubernetes-list-type: map
              helmReleaseSummaries:
                description: |-
                  HelmReleaseSummaries reports the status of each helm chart
                  directly managed by ClusterProfile.
                items:
                  properties:
                    conflictMessage:
                      description: |-
                        Status indicates whether ClusterSummary can manage the helm
                        chart or there is a conflict
                      type: string
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    status:
                      description: |-
                        Status indicates whether ClusterSummary can manage the helm
                        chart or there is a conflict
                      enum:
                      - Managing
                      - Conflict
                      type: string
                    valuesHash:
                      description: ValuesHash represents of a unique value for the
                        values section
                      format: byte
                      type: string
                  required:
                  - releaseName
                  - releaseNamespace
                  - status
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              nextReconcileTime:
                description: |-
                  NextReconcileTime is the earliest time when this resource should be reconciled again.
                  Controller skips reconciliation if current time is before this timestamp.
                  If not set, reconciliations will happen as usual.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: profiles.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: Profile
    listKind: ProfileList
    plural: profiles
    singular: profile
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Profile is the Schema for the profiles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterRefs:
                description: ClusterRefs identifies clusters to associate to.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              continueOnConflict:
                default: false
                description: |-
                  By default (when ContinueOnConflict is unset or set to false), Sveltos stops deployment after
                  encountering the first conflict (e.g., another ClusterProfile already deployed the resource).
                  If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                  if conflicts are detected for previous resources.
                type: boolean
              continueOnError:
                default: false
                description: |-
                  By default (when ContinueOnError is unset or set to false), Sveltos stops deployment after
                  encountering the first error.
                  If set to true, Sveltos will attempt to deploy remaining resources in the ClusterProfile even
                  if errors are detected for previous resources.
                type: boolean
              dependsOn:
                description: |-
                  DependsOn specifies a list of other ClusterProfiles that this instance depends on.
                  In any managed cluster that matches this ClusterProfile, the add-ons and applications
                  defined in this instance will not be deployed until all add-ons and applications in the
                  ClusterProfiles listed as dependencies are deployed.
                items:
                  type: string
                type: array
              driftExclusions:
                description: |-
                  DriftExclusions is a list of configuration drift exclusions to be applied when syncMode is
                  set to ContinuousWithDriftDetection. Each exclusion specifies JSON6902 paths to ignore
                  when evaluating drift, optionally targeting specific resources and features.
                items:
                  properties:
                    paths:
                      description: Paths is a slice of JSON6902 paths to exclude from
                        configuration drift evaluation.
                      items:
                        type: string
                      type: array
                    target:
                      description: Target points to the resources that the paths refers
                        to.
                      properties:
                        annotationSelector:
                          description: |-
                            AnnotationSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource annotations.
                          type: string
                        group:
                          description: |-
                            Group is the API group to select resources from.
                            Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        kind:
                          description: |-
                            Kind of the API Group to select resources from.
                            Together with Group and Version it is capable of unambiguously
                            identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource labels.
                          type: string
                        name:
                          description: Name to match resources with.
                          type: string
                        namespace:
                          description: Namespace to select resources from.
                          type: string
                        version:
                          description: |-
                            Version of the API Group to select resources from.
                            Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                      type: object
                  required:
                  - paths
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              extraAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                  deployed in a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                  `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                  (Deprecated use Patches instead)
                type: object
              extraLabels:
                additionalProperties:
                  type: string
                description: |-
                  ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                  a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a label with a key present in
                  `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                  (Deprecated use Patches instead)
                type: object
              helmCharts:
                description: Helm charts is a list of helm charts that need to be
                  deployed
                items:
                  properties:
                    chartName:
                      description: |-
                        ChartName is the chart name
                        This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                        Must be defined otherwise.
                      type: string
                    chartVersion:
                      description: |-
                        ChartVersion is the chart version
                        This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                        It is ignored if RepositoryURL references a Flux Source.
                        Must be defined otherwise.
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    options:
                      description: Options allows to set flags which are used during
                        installation.
                      properties:
                        atomic:
                          default: false
                          description: |-
                            if set, the installation process deletes the installation/upgrades on failure.
                            The --wait flag will be set automatically if --atomic is used
                            Default to false
                          type: boolean
                        dependencyUpdate:
                          default: false
                          description: |-
                            update dependencies if they are missing before installing the chart
                            Default to false
                          type: boolean
                        description:
                          description: Description is the description of an helm operation
                          type: string
                        disableHooks:
                          default: false
                          description: |-
                            prevent hooks from running during install/upgrade/uninstall
                            Default to false
                          type: boolean
                        disableOpenAPIValidation:
                          default: false
                          description: |-
                            if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                            Default to false
                          type: boolean
                        enableClientCache:
                          default: false
                          description: EnableClientCache is a flag to enable Helm
                            client cache. If it is not specified, it will be set to
                            false.
                          type: boolean
                        installOptions:
                          description: HelmInstallOptions are options specific to
                            helm install
                          properties:
                            createNamespace:
                              default: true
                              description: Create the release namespace if not present.
                                Defaults to true
                              type: boolean
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install. If set to true, overrides
                                DisableHooks in HelmOptions. Use this one when you want to selective
                                disable hooks on install
                                Default to false
                              type: boolean
                            replace:
                              default: true
                              description: Replaces if set indicates to replace an
                                older release with this one
                              type: boolean
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels that would be added to release metadata.
                          type: object
                        skipCRDs:
                          default: false
                          description: |-
                            SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                            By default, CRDs are installed if not already present.
                          type: boolean
                        skipSchemaValidation:
                          default: false
                          description: SkipSchemaValidation determines if JSON schema
                            validation is disabled.
                          type: boolean
                        timeout:
                          description: time to wait for any individual Kubernetes
                            operation (like Jobs for hooks) (default 5m0s)
                          type: string
                        uninstallOptions:
                          description: HelmUninstallOptions are options specific to
                            helm uninstall
                          properties:
                            deletionPropagation:
                              description: DeletionPropagation
                              enum:
                              - orphan
                              - foreground
                              - background
                              type: string
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install. If set to true, overrides
                                DisableHooks in HelmOptions. Use this one when you want to selective
                                disable hooks on uninstall
                                Default to false
                              type: boolean
                            keepHistory:
                              description: |-
                                When uninstall a chart with this flag, Helm removes the resources associated with the chart,
                                but it keeps the release information. This allows to see details about the uninstalled release
                                using the helm history command.
                              type: boolean
                          type: object
                        upgradeOptions:
                          description: HelmUpgradeOptions are options specific to
                            helm upgrade
                          properties:
                            cleanupOnFail:
                              default: false
                              description: CleanupOnFail will, if true, cause the
                                upgrade to delete newly-created resources on a failed
                                update.
                              type: boolean
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install. If set to true, overrides
                                DisableHooks in HelmOptions. Use this one when you want to selective
                                disable hooks on upgrade
                                Default to false
                              type: boolean
                            force:
                              default: false
                              description: |-
                                Force will, if set to `true`, ignore certain warnings and perform the upgrade anyway.
                                This should be used with caution.
                              type: boolean
                            maxHistory:
                              default: 2
                              description: |-
                                MaxHistory limits the maximum number of revisions saved per release
                                Default to 2
                              type: integer
                            recreate:
                              default: false
                              description: Recreate will (if true) recreate pods after
                                a rollback.
                              type: boolean
                            resetThenReuseValues:
                              default: false
                              description: ResetThenReuseValues will reset the values
                                to the chart's built-ins then merge with user's last
                                supplied values.
                              type: boolean
                            resetValues:
                              default: false
                              description: ResetValues will reset the values to the
                                chart's built-ins rather than merging with existing.
                              type: boolean
                            reuseValues:
                              default: false
                              description: |-
                                ReuseValues copies values from the current release to a new release if the
                                new release does not have any values. If the request already has values,
                                or if there are no values in the current release, this does nothing.
                                This is skipped if the ResetValues flag is set, in which case the
                                request values are not altered.
                              type: boolean
                            subNotes:
                              default: false
                              description: SubNotes determines whether sub-notes are
                                rendered in the chart.
                              type: boolean
                            upgradeCRDs:
                              default: false
                              description: |-
                                UpgradeCRDs upgrade CRDs from the Helm Chart's crds directory
                                By default, CRDs are not applied during Helm upgrade action by Helm
                                https://helm.sh/docs/chart_best_practices/custom_resource_definitions/
                              type: boolean
                          type: object
                        wait:
                          default: false
                          description: |-
                            if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                            are in a ready state before marking the release as successful. It will wait for as long as --timeout
                            Default to false
                          type: boolean
                        waitForJobs:
                          default: false
                          description: |-
                            if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                            It will wait for as long as --timeout
                            Default to false
                          type: boolean
                      type: object
                    registryCredentialsConfig:
                      description: |-
                        RegistryCredentialsConfig is an optional configuration for credentials,
                        including information to connect to private registries.
                      properties:
                        ca:
                          description: |-
                            CASecretRef references a secret containing the TLS CA certificate
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            key: ca.crt
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        credentials:
                          description: |-
                            CredentialsSecretRef references a secret containing credentials
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        insecureSkipTLSVerify:
                          description: InsecureSkipTLSVerify controls server certificate
                            verification.
                          type: boolean
                        key:
                          description: |-
                            Key specifies the key within the CredentialsSecretRef containing the data
                            If not specified, it defaults to the only key in the secret if there's just one.
                          type: string
                        plainHTTP:
                          description: PlainHTTP indicates to use insecure HTTP connections
                            for the chart download
                          type: boolean
                      type: object
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: |-
                        RepositoryName is the name helm chart repository
                        This field is used only when RepositoryURL points to a traditional HTTP or OCI repository.
                        It is ignored if RepositoryURL references a Flux Source.
                        Must be defined otherwise.
                      type: string
                    repositoryURL:
                      description: |-
                        RepositoryURL is the URL helm chart repository
                        It can point to a traditional HTTP-based repository or an OCI registry.
                        Examples:
                          - HTTP Repository: https://charts.example.com/stable
                          - OCI Registry: oci://registry.example.com/namespace/charts
                          - GitHub Pages: https://<username>.github.io/<repository>/
                          - Any other valid URL where Helm charts are hosted.

                        Alternatively, it can be a Flux source reference:
                          <flux source kind>://<flux source namespace>/<flux source name>/<path>

                        Where:
                          - <flux source kind> is the type of Flux source (gitrepository, ocirepository, bucket).
                          - <flux source namespace> and <flux source name> are the namespace and name of the Flux Source in the management cluster.
                          - <path> is the path within the source repository where the Helm charts are located.

                        For instance:
                          gitrepository://flux-system/flux-system/charts/projectsveltos

                        Assuming there is a Flux GitRepository named 'flux-system' in the 'flux-system' namespace
                        syncing 'https://github.com/projectsveltos/helm-charts.git/', and the Helm charts are
                        located in the 'charts/projectsveltos' directory of that repository.
                      minLength: 1
                      type: string
                    values:
                      description: |-
                        Values field allows to define configuration for the Helm release.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                      type: string
                    valuesFrom:
                      description: |-
                        ValuesFrom can reference ConfigMap/Secret instances. Within the ConfigMap or Secret data,
                        it is possible to store configuration for the Helm release.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                      items:
                        properties:
                          kind:
                            description: |-
                              Kind of the resource. Supported kinds are:
                              - ConfigMap/Secret
                            enum:
                            - ConfigMap
                            - Secret
                            type: string
                          name:
                            description: |-
                              Name of the referenced resource.
                              Name can be expressed as a template and instantiate using any cluster field.
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referenced resource.
                              For ClusterProfile namespace can be left empty. In such a case, namespace will
                              be implicit set to cluster's namespace.
                              For Profile namespace must be left empty. The Profile namespace will be used.
                              Namespace can be expressed as a template and instantiate using any cluster field.
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates that the referenced resource is not mandatory.
                              If set to true and the resource is not found, the error will be ignored,
                              and Sveltos will continue processing other ValueFroms.
                            type: boolean
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  required:
                  - releaseName
                  - releaseNamespace
                  - repositoryURL
                  type: object
                  x-kubernetes-validations:
                  - message: ChartName must be defined
                    rule: 'self.repositoryURL.startsWith(''http'') ? size(self.chartName)
                      >= 1 : true'
                  - message: ChartName must be defined
                    rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.chartName)
                      >= 1 : true'
                  - message: ChartVersion must be defined
                    rule: 'self.repositoryURL.startsWith(''http'') ? size(self.chartVersion)
                      >= 1 : true'
                  - message: ChartVersion must be defined
                    rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.chartVersion)
                      >= 1 : true'
                  - message: RepositoryName must be defined
                    rule: 'self.repositoryURL.startsWith(''http'') ? size(self.repositoryName)
                      >= 1 : true'
                  - message: RepositoryName must be defined
                    rule: 'self.repositoryURL.startsWith(''oci'') ? size(self.repositoryName)
                      >= 1 : true'
                type: array
                x-kubernetes-list-type: atomic
              kustomizationRefs:
                description: |-
                  Kustomization refs is a list of kustomization paths. Kustomization will
                  be run on those paths and the outcome will be deployed.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                        NOTE: DeploymentType Local cannot be used when the matching cluster is the management cluster itself.
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - flux GitRepository;OCIRepository;Bucket
                        - ConfigMap/Secret
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: |-
                        Name of the referenced resource.
                        Name can be expressed as a template and instantiate using any cluster field.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. The Profile namespace will be used.
                        Namespace can be expressed as a template and instantiate using any cluster field.
                      type: string
                    optional:
                      default: false
                      description: |-
                        Optional indicates that the referenced resource is not mandatory.
                        If set to true and the resource is not found, the error will be ignored,
                        and Sveltos will continue processing other ValueFroms.
                      type: boolean
                    path:
                      description: |-
                        Path to the directory containing the kustomization.yaml file, or the
                        set of plain YAMLs a kustomization.yaml should be generated for.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster)
                      type: string
                    targetNamespace:
                      description: |-
                        TargetNamespace sets or overrides the namespace in the
                        kustomization.yaml file.
                      maxLength: 63
                      minLength: 1
                      type: string
                    values:
                      additionalProperties:
                        type: string
                      description: |-
                        Values is a map[string]string type that allows to define a set of key-value pairs.
                        These key-value pairs can optionally leverage Go templates for further processing.
                        With Sveltos, you can define key-value pairs where the values can be Go templates.
                        These templates have access to management cluster information during deployment. This allows
                        to do more than just replace placeholders. Variables can be used to dynamically
                        construct values based on other resources or variables within the Kustomize output.
                        For example, imagine you have a Region key with a template value like:
                        '{{ index .Cluster.metadata.labels "region" }}'.
                        This template retrieves the region label from the cluster instance metadata.
                        Finally, Sveltos uses these processed values to fill placeholders in the Kustomize output.
                        The output itself can also contain templates, like:
                        region: '{{ default "west" .Region }}'.
                        This way, the final output from Kustomize will have the region set dynamically based on
                        the actual region retrieved earlier.
                      type: object
                    valuesFrom:
                      description: |-
                        ValuesFrom can reference ConfigMap/Secret instances. Within the ConfigMap or Secret data,
                        it is possible to define key-value pairs. These key-value pairs can optionally leverage
                        Go templates for further processing.
                        With Sveltos, you can define key-value pairs where the values can be Go templates.
                        These templates have access to management cluster information during deployment. This allows
                        to do more than just replace placeholders. Variables can be used to dynamically
                        construct values based on other resources or variables within the Kustomize output.
                        For example, imagine you have a Region key with a template value like:
                        '{{ index .Cluster.metadata.labels "region" }}'.
                        This template retrieves the region label from the cluster instance metadata.
                        Finally, Sveltos uses these processed values to fill placeholders in the Kustomize output.
                        The output itself can also contain templates, like:
                        region: '{{ default "west" .Region }}'.
                        This way, the final output from Kustomize will have the region set dynamically based on
                        the actual region retrieved earlier.
                      items:
                        properties:
                          kind:
                            description: |-
                              Kind of the resource. Supported kinds are:
                              - ConfigMap/Secret
                            enum:
                            - ConfigMap
                            - Secret
                            type: string
                          name:
                            description: |-
                              Name of the referenced resource.
                              Name can be expressed as a template and instantiate using any cluster field.
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referenced resource.
                              For ClusterProfile namespace can be left empty. In such a case, namespace will
                              be implicit set to cluster's namespace.
                              For Profile namespace must be left empty. The Profile namespace will be used.
                              Namespace can be expressed as a template and instantiate using any cluster field.
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates that the referenced resource is not mandatory.
                              If set to true and the resource is not found, the error will be ignored,
                              and Sveltos will continue processing other ValueFroms.
                            type: boolean
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              maxConsecutiveFailures:
                description: |-
                  The maximum number of consecutive deployment failures that Sveltos will permit.
                  After this many consecutive failures, the deployment will be considered failed, and Sveltos will stop retrying.
                  This setting applies only to feature deployments, not resource removal.
                  This field is optional. If not set, Sveltos default behavior is to keep retrying.
                type: integer
              maxUpdate:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  The maximum number of clusters that can be updated concurrently.
                  Value can be an absolute number (ex: 5) or a percentage of desired cluster (ex: 10%).
                  Defaults to 100%.
                  Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                  changes, only 30% of matching clusters will be updated in parallel. Only when updates
                  in those cluster succeed, other matching clusters are updated.
                pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                x-kubernetes-int-or-string: true
              patches:
                description: |-
                  Define additional Kustomize inline Patches applied for all resources on this profile
                  Within the Patch Spec you can use templating
                items:
                  description: |-
                    Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                    be applied to.
                  properties:
                    patch:
                      description: |-
                        Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                        an array of operation objects.
                        These values can be static or leverage Go templates for dynamic customization.
                        When expressed as templates, the values are filled in using information from
                        resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                      type: string
                    target:
                      description: Target points to the resources that the patch document
                        should be applied to.
                      properties:
                        annotationSelector:
                          description: |-
                            AnnotationSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource annotations.
                          type: string
                        group:
                          description: |-
                            Group is the API group to select resources from.
                            Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        kind:
                          description: |-
                            Kind of the API Group to select resources from.
                            Together with Group and Version it is capable of unambiguously
                            identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector is a string that follows the label selection expression
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource labels.
                          type: string
                        name:
                          description: Name to match resources with.
                          type: string
                        namespace:
                          description: Namespace to select resources from.
                          type: string
                        version:
                          description: |-
                            Version of the API Group to select resources from.
                            Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                          type: string
                      type: object
                  required:
                  - patch
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              policyRefs:
                description: |-
                  PolicyRefs references all the ConfigMaps/Secrets/Flux Sources containing kubernetes resources
                  that need to be deployed in the matching managed clusters.
                  The values contained in those resources can be static or leverage Go templates for dynamic customization.
                  When expressed as templates, the values are filled in using information from
                  resources within the management cluster before deployment (Cluster and TemplateResourceRefs)
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - ConfigMap/Secret
                        - flux GitRepository;OCIRepository;Bucket
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: |-
                        Name of the referenced resource.
                        Name can be expressed as a template and instantiate using any cluster field.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. Profile namespace will be used.
                        Namespace can be expressed as a template and instantiate using any cluster field.
                      type: string
                    optional:
                      default: false
                      description: |-
                        Optional indicates that the referenced resource is not mandatory.
                        If set to true and the resource is not found, the error will be ignored,
                        and Sveltos will continue processing other PolicyRefs.
                      type: boolean
                    path:
                      description: |-
                        Path to the directory containing the YAML files.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        Used only for GitRepository;OCIRepository;Bucket
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              reloader:
                default: false
                description: |-
                  Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                  by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                  when a ConfigMap/Secret instance mounted as volume is modified.
                  When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                  starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                type: boolean
              setRefs:
                description: |-
                  SetRefs identifies referenced (cluster)Sets.
                  - ClusterProfile can reference ClusterSet;
                  - Profile can reference Set;
                items:
                  type: string
                type: array
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: |-
                  StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                  the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                  be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                  leave ClusterProfile deployed policies in the Cluster.
                enum:
                - WithdrawPolicies
                - LeavePolicies
                type: string
              syncMode:
                default: Continuous
                description: |-
                  SyncMode specifies how features are synced in a matching workload cluster.
                  - OneTime means, first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such cluster. Any subsequent feature configuration
                  change won't be applied into the matching workload clusters;
                  - Continuous mode ensures that the first time a workload cluster matches a ClusterProfile,
                  the specified features are deployed. Subsequent changes to the feature configuration are also
                  automatically applied to all matching workload clusters.
                  _ SyncModeContinuousWithDriftDetection operates similarly to Continuous mode, but also monitors
                  matching managed clusters for configuration drift. If drift is detected, a reconciliation is
                  triggered to ensure the managed cluster's configuration aligns with the ClusterProfile.
                  - DryRun means no change will be propagated to any matching cluster. A report
                  instead will be generated summarizing what would happen in any matching cluster
                  because of the changes made to ClusterProfile while in DryRun mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
              templateResourceRefs:
                description: |-
                  TemplateResourceRefs is a list of resource to collect from the management cluster.
                  Those resources' values will be used to instantiate templates
                items:
                  properties:
                    identifier:
                      description: |-
                        Identifier is how the resource will be referred to in the
                        template
                      type: string
                    optional:
                      default: false
                      description: |-
                        Optional indicates that the referenced resource is not mandatory.
                        If set to true and the resource is not found, the error will be ignored,
                        and Sveltos will continue processing other TemplateResourceRefs.
                      type: boolean
                    resource:
                      description: |-
                        Resource references a Kubernetes instance in the management
                        cluster to fetch and use during template instantiation.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        Name and namespace can be expressed as a template and instantiate using any cluster field.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - identifier
                  - resource
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - identifier
                x-kubernetes-list-type: map
              tier:
                default: 100
                description: |-
                  Tier controls the order of deployment for ClusterProfile or Profile resources targeting
                  the same cluster resources.
                  Imagine two configurations (ClusterProfiles or Profiles) trying to deploy the same resource (a Kubernetes
                  resource or an helm chart). By default, the first one to reach the cluster "wins" and deploys it.
                  Tier allows you to override this. When conflicts arise, the ClusterProfile or Profile with the **lowest**
                  Tier value takes priority and deploys the resource.
                  Higher Tier values represent lower priority. The default Tier value is 100.
                  Using Tiers provides finer control over resource deployment within your cluster, particularly useful
                  when multiple configurations manage the same resources.
                format: int32
                minimum: 1
                type: integer
              validateHealths:
                description: |-
                  ValidateHealths is a slice of Lua functions to run against
                  the managed cluster to validate the state of those add-ons/applications
                  is healthy
                items:
                  properties:
                    featureID:
                      description: |-
                        FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                        This field indicates when to run this check.
                        For instance:
                        - if set to Helm this check will be run after all helm
                        charts specified in the ClusterProfile are deployed.
                        - if set to Resources this check will be run after the content
                        of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                        PolicyRef sections is deployed
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    group:
                      description: Group of the resource to fetch in the managed Cluster.
                      type: string
                    kind:
                      description: Kind of the resource to fetch in the managed Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            - Has
                            - DoesNotHave
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        type: object
                      type: array
                    name:
                      description: Name is the name of this check
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource to fetch in the managed Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    script:
                      description: |-
                        Script is a text containing a lua script.
                        Must return struct with field "health"
                        representing whether object is a match (true or false)
                      type: string
                    version:
                      description: Version of the resource to fetch in the managed
                        Cluster.
                      type: string
                  required:
                  - featureID
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: Status defines the observed state of ClusterProfile/Profile
            properties:
              dependenciesHash:
                description: |-
                  DependenciesHash is a hash representing the set of clusters where this ClusterProfile
                  must be deployed, based on the combined configuration of its dependencies.
                format: byte
                type: string
              matchingClusters:
                description: |-
                  MatchingClusterRefs reference all the clusters currently matching
                  ClusterProfile ClusterSelector
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              updatedClusters:
                description: |-
                  UpdatedClusters contains information all the cluster currently matching
                  ClusterProfile ClusterSelector and already updated to latest ClusterProfile
                  Spec
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
              updatingClusters:
                description: |-
                  UpdatingClusters reference all the cluster currently matching
                  ClusterProfile ClusterSelector and being updated
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: addon-controller-role-extra
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clusterconfiguration-editor-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clusterconfiguration-viewer-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clusterprofile-editor-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clusterprofile-viewer-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clusterreport-editor-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clusterreport-viewer-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clustersummary-editor-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-clustersummary-viewer-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-controller-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - impersonate
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations
  - clusterreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations/status
  - clusterreports/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  - profiles
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/finalizers
  - clustersummaries/finalizers
  - profiles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/status
  - clustersummaries/status
  - profiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extension.projectsveltos.io
  resources:
  - jsonnetsources
  - yttsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks
  - configurationgroups/status
  - debuggingconfigurations
  - eventtriggers
  - sveltosclusters
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets
  - configurationbundles
  - configurationgroups
  - reloaders
  - resourcesummaries
  - sets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets/finalizers
  - sets/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets/status
  - sets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - configurationbundles/status
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - resourcesummaries/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - buckets/status
  - gitrepositories
  - gitrepositories/status
  - ocirepositories
  - ocirepositories/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-controller-role-extra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: addon-controller
    app.kubernetes.io/instance: profile-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: addon-controller
  name: addon-profile-editor-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: addon-controller
    app.kubernetes.io/instance: profile-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: addon-controller
  name: addon-profile-viewer-role
rules:
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: addon-controller-rolebinding-extra
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: addon-controller-role-extra
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: addon-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addon-controller-role
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: addon-controller-rolebinding-extra
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addon-controller-role-extra
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: addon-controller
  name: addon-controller
  namespace: projectsveltos
spec:
  ports:
  - name: metrics
    port: 80
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: addon-controller
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: addon-controller
  name: addon-controller
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: addon-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        control-plane: addon-controller
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --report-mode=0
        - --shard-key=
        - --capi-onboard-annotation=
        - --v=5
        - --version=v1.0.1
        - --agent-in-mgmt-cluster=false
        command:
        - /manager
        env:
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        image: docker.io/projectsveltos/addon-controller:v1.0.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      securityContext:
        runAsNonRoot: true
      serviceAccountName: addon-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
